@model List<Book>

@{
    ViewData["Title"] = "Books";
    var orderedBooks = Model.OrderByDescending(b => b.IsTrending).ToList();
}

<div class="books-container">
    <div class="books-header">
        <div class="header-content">
            <h1>DISCOVER BOOKS</h1>
            <p class="sub-header">Explore our collection of amazing books</p>
        </div>
    </div>

    <div class="books-grid">
        @foreach(var item in orderedBooks)
        {
            <div class="book-card">
                @using (Html.BeginForm("Details", "Books", FormMethod.Get))
                {
                    <input type="hidden" name="id" value="@item.BookID" />
                    <button type="submit" class="book-card-button">
                        <div class="book-cover">
                            @if (item.IsTrending)
                            {
                                <div class="trending-indicator">
                                    <i class="bi bi-fire"></i> Trending
                                </div>
                            }
                            <div class="book-title-preview">@item.BookName</div>
                        </div>
                        <div class="book-details">
                            <h3>@item.BookName</h3>
                            <p class="book-author">@item.BookAuthor</p>
                            <p class="book-info">
                                <span class="language-badge">@(item.Language?.Name ?? "N/A")</span>
                                <span class="price-badge">$@item.BookPrice</span>
                            </p>
                        </div>
                    </button>
                }
            </div>
        }
        
        <!-- More Books Card -->
        <div class="book-card more-books">
            <div class="book-cover coming-soon">
                <i class="bi bi-three-dots"></i>
            </div>
            <div class="book-details">
                <h3>More Books</h3>
                <p class="book-author">Coming Soon</p>
                <p class="book-info">
                    <span class="coming-soon-badge">Stay Tuned!</span>
                </p>
            </div>
        </div>
    </div>

    @if (ViewData["SelectedBook"] != null)
    {
        var book = (Book)ViewData["SelectedBook"];
        <div class="book-details-panel @(ViewData["SelectedBook"] != null ? "active" : "")">
            <div class="details-content">
                <div class="details-header">
                    <h2>@book.BookName</h2>
                    @using (Html.BeginForm("Index", "Books", FormMethod.Get))
                    {
                        <button type="submit" class="close-button">
                            <i class="bi bi-x-lg"></i>
                        </button>
                    }
                </div>
                
                <div class="book-cover-large">
                    <div class="book-title-preview">@book.BookName</div>
                </div>

                <div class="book-info-detailed">
                    <p class="author-info">
                        <span class="author">@book.BookAuthor</span>
                        <span class="separator">・</span>
                        <span class="published-date">@book.BookPublishedDate.ToString("MMMM dd, yyyy")</span>
                    </p>
                    <div class="rating-container">
                        <div class="stars">
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= book.StarRating)
                                {
                                    <i class="bi bi-star-fill"></i> <!-- Solid star -->
                                }
                                else
                                {
                                    <i class="bi bi-star"></i> <!-- Hollow star -->
                                }
                            }
                        </div>
                        <span class="rating-number">@book.StarRating</span>
                    </div>
                    <p class="synopsis">@book.Synopsis</p>
                    
                    <div class="badges">
                        <span class="badge">@book.Language?.Name</span>
                        @foreach(var genre in book.BookGenres.Select(bg => bg.Genre))
                        {
                            <span class="badge">@genre.Name</span>
                        }
                    </div>

                    <div class="price-section">
                        <span class="price">$@book.BookPrice</span>
                        <div class="action-buttons">
                            <form asp-controller="Library" asp-action="AddToLibrary" method="post" style="margin: 0;">
                                <input type="hidden" name="bookId" value="@book.BookID" />
                                <button type="submit" class="buy-button">Buy Now</button>
                            </form>
                            <form asp-controller="Cart" asp-action="AddToCart" method="post" style="margin: 0;">
                                <input type="hidden" name="bookId" value="@book.BookID" />
                                <button type="submit" class="cart-button">
                                    <i class="bi bi-cart-plus"></i>
                                    Add to Cart
                                </button>
                            </form>
                            <form asp-controller="Wishlist" asp-action="AddToWishlist" method="post" style="margin: 0;">
                                <input type="hidden" name="bookId" value="@book.BookID" />
                                <button type="submit" class="wishlist-button">
                                    <i class="bi bi-heart"></i>
                                    Add to Wishlist
                                </button>
                            </form>
                        </div>
                    </div>

                    <div class="tags-section">
                        <div class="tag-group">
                            <span class="tag-label">Authors:</span>
                            <div class="tag-badges">
                                @foreach (var bookAuthor in book.BookAuthors)
                                {
                                    <span class="tag-badge">@bookAuthor.Author.Name</span>
                                }
                            </div>
                        </div>
                        
                        <div class="tag-group">
                            <span class="tag-label">Publishers:</span>
                            <div class="tag-badges">
                                @foreach (var bookPublisher in book.BookPublishers)
                                {
                                    <span class="tag-badge">@bookPublisher.Publisher.Name</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="blur-overlay"></div>
    }
</div>

<style>
.books-container {
    padding: 2rem;
    max-width: 1200px;
    margin: 0 auto;
    position: relative;
}

.books-header {
    text-align: center;
    margin-bottom: 3rem;
    padding: 2rem 0;
}

.header-content {
    max-width: 800px;
    margin: 0 auto;
}

.books-header h1 {
    font-size: 2.5rem;
    color: #1a73e8;
    margin-bottom: 0.5rem;
}

.sub-header {
    font-size: 1.1rem;
    color: #666;
    margin: 0;
    font-weight: 300;
}

.books-grid {
    display: grid;
    grid-template-columns: repeat(4, 220px);
    gap: 4rem;
    padding: 2.5rem;
    width: fit-content;
    margin: 0 auto;
}
.book-card {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease;
    display: flex;
    flex-direction: column;
    width: 180px;
}

.book-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

.book-cover {
    aspect-ratio: 3/4;
    background: linear-gradient(145deg, #60a5fa, #3b82f6);
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
}

.book-title-preview {
    color: white;
    font-size: 1.1rem;
    text-align: center;
    font-weight: 500;
    padding: 0.75rem;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    line-height: 1.3;
}

.book-details {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.2rem;
}

.book-details h3 {
    font-size: 1rem;
    color: #1f2937;
    margin: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.book-author {
    color: #6b7280;
    font-size: 0.85rem;
    margin: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.book-meta {
    display: flex;
    flex-direction: column;
    gap: 0.2rem;
    margin-top: 0.2rem;
}

.language-badge {
    display: inline-block;
    background: #e8f0fe;
    color: #1a73e8;
    padding: 0.25rem 0.75rem;
    border-radius: 16px;
    font-size: 0.9rem;
}

.book-actions {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
}

.edit-btn, .delete-btn {
    padding: 0.5rem 1rem;
    border-radius: 8px;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
}

.edit-btn {
    background: #1a73e8;
    color: white;
    text-decoration: none;
}

.delete-btn {
    background: #dc3545;
    color: white;
}

.delete-form {
    margin: 0;
}

.more-books .coming-soon {
    background: linear-gradient(145deg, #e8f0fe, #c8d9f3);
    border: none;
}

.more-books .coming-soon i {
    font-size: 2.5rem;
    color: white;
    opacity: 0.8;
}

.coming-soon-badge {
    background: #e8f0fe;
    color: #1a73e8;
    padding: 0.25rem 0.75rem;
    border-radius: 16px;
    font-size: 0.9rem;
}

.more-books {
    opacity: 0.8;
    transition: opacity 0.2s;
}

.more-books:hover {
    opacity: 1;
}

.book-card-button {
    width: 100%;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    text-align: left;
}

.book-details-panel {
    position: fixed;
    top: 0;
    left: -100%;
    width: 40%;
    height: 100vh;
    background: #1f2937;
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.2);
    transition: left 0.3s ease-in-out;
    z-index: 1000;
    overflow-y: auto;
}

.book-details-panel.active {
    left: 0;
}

.book-details-panel.active ~ .blur-overlay {
    opacity: 1;
    visibility: visible;
}

.details-content {
    padding: 2rem;
    padding-top: 3.5rem;
}

.details-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 2rem;
    text-align: center;
    position: relative;
}

.details-header h2 {
    margin-top: 0;
    font-size: 1.8rem;
    color: #ffffff;
}

.close-button {
    position: absolute;
    right: -1rem;
    top: -3rem;
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #9ca3af;
    padding: 0.5rem;
    transition: color 0.2s;
}

.close-button:hover {
    color: #ffffff;
}

.book-cover-large {
    background: linear-gradient(145deg, #60a5fa, #3b82f6);
    width: 250px;
    height: 375px;
    margin: 0 auto 2rem;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    padding: 2rem;
    color: white;
}

.book-cover-large i {
    font-size: 4rem;
    color: #1a73e8;
}

.book-info-detailed {
    text-align: center;
}

.author-info {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 1rem;
    color: #60a5fa;
    font-size: 1.2rem;
}

.separator {
    color: #60a5fa;
}

.author, .published-date {
    font-size: 1.2rem;
    color: #60a5fa;
}

.synopsis {
    color: #d1d5db;
    line-height: 1.6;
    margin-bottom: 2rem;
}

.badges {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: center;
    margin-bottom: 2rem;
}

.badge {
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
}

/* Language badge style */
.badges span.badge:first-child {
    background: #e8f0fe;
    color: #1a73e8;
}

/* Genre badge style */
.badges span.badge:not(:first-child) {
    background: #e8f5e9;
    color: #2e7d32;
}

.price-section {
    margin: 2rem 0;
}

.price {
    font-size: 2rem;
    color: #60a5fa;
    font-weight: bold;
    display: block;
    margin-bottom: 1rem;
}

.action-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
}

.buy-button, .cart-button, .wishlist-button {
    padding: 0.8rem 1.5rem;
    border-radius: 25px;
    border: none;
    cursor: pointer;
    font-size: 1rem;
    transition: transform 0.2s;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.buy-button {
    background: #60a5fa;
    color: white;
}

.cart-button {
    background: #60a5fa;
    color: white;
}

.wishlist-button {
    background: white;
    color: #1f2937;
}

.buy-button:hover, .cart-button:hover, .wishlist-button:hover {
    transform: translateY(-2px);
}

.publication-info {
    color: #666;
    font-size: 0.9rem;
    margin-top: 2rem;
}

.book-title-preview {
    font-size: 1.1rem;
    font-weight: 500;
    text-align: center;
    word-wrap: break-word;
    display: -webkit-box;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
    line-height: 1.4;
}

.book-cover-large .book-title-preview {
    font-size: 1.8rem;
    -webkit-line-clamp: 6;
}

.tags-section {
    margin-top: 2.5rem;
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    align-items: center;
    text-align: center;
    background: #2d3748;
    border-radius: 12px;
}

.tag-group {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
    align-items: center;
    width: 100%;
    padding: 0.5rem;
}

.tag-label {
    font-weight: 600;
    color: #60a5fa;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    position: relative;
    padding-bottom: 0.5rem;
}

.tag-label::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 2rem;
    height: 2px;
    background: #60a5fa;
    border-radius: 2px;
}

.tag-badges {
    display: flex;
    flex-wrap: wrap;
    gap: 0.8rem;
    justify-content: center;
}

.tag-badge {
    background: white;
    color: #1f2937;
    padding: 0.6rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease;
    border: 1px solid white;
}

.tag-badge:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    border-color: #60a5fa;
    background: white;
    color: #60a5fa;
}

.rating-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    margin: 0.5rem 0 1rem 0;
}

.stars {
    display: flex;
    gap: 0.25rem;
}

.stars i {
    color: #ffd700; /* Golden color for stars */
    font-size: 1.2rem;
}

.rating-number {
    font-size: 1.2rem;
    font-weight: 500;
    color: #666;
}

.blur-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
    z-index: 999;
}

.trending-indicator {
    position: absolute;
    top: 12px;
    left: 12px;
    background: rgba(239, 68, 68, 0.9);
    color: white;
    padding: 0.4rem 0.8rem;
    border-radius: 20px;
    font-size: 0.8rem;
    display: flex;
    align-items: center;
    gap: 0.3rem;
    backdrop-filter: blur(4px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.trending-indicator i {
    font-size: 0.9rem;
}

.trending-flag {
    position: absolute;
    top: -10px;
    left: 10px;
    background: #ef4444;
    color: white;
    padding: 0.4rem 1rem;
    border-radius: 20px;
    font-size: 0.8rem;
    display: flex;
    align-items: center;
    gap: 0.3rem;
    z-index: 10;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    white-space: nowrap;
}
</style>